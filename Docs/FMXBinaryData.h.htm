<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html slick-uniqueid="3" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" dir="ltr" lang="en-gb"><head>
<script src="FMXBinaryData.h_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-34699114-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	  <!-- base href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h" -->
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="keywords" content="productie, podiumkunsten, cultuur, cultuursector, copywriter, teksten, tekstschrijver, programmatoelichting, programmaboek, redactie, redacteur,planning, concerten, festivals, subsidieaanvragen, ensembles, Filemaker sdk headers, filemaker, sdk, filemaker api, api, plug-ins, plug-in, filemaker plug-in, filemaker plug-ins, ">
  <meta name="author" content="Super User">
  <meta name="description" content="Van der Linden Cultural Services levert diensten in de cultuursector. U kunt terecht voor teksten (zakelijk en informatief), productie en stage management in de podiumkunsten, Filemaker-database-development, transport, etc.">
  <meta name="generator" content="Joomla! - Open Source Content Management">
  <title>Van der Linden Cultural Services - FMXBinaryData.h</title>
  <link href="http://culturalservices.nl/index.php/component/search/?Itemid=545&amp;format=opensearch" rel="search" title="Search Van der Linden Cultural Services" type="application/opensearchdescription+xml">
  <link rel="stylesheet" href="FMXBinaryData.h_files/highslide.css" type="text/css">
  <link rel="stylesheet" href="FMXBinaryData.h_files/highslide-sitestyles.css" type="text/css">
  <link rel="stylesheet" href="FMXBinaryData.h_files/shCoreEclipse.css" type="text/css">
  <link rel="stylesheet" href="FMXBinaryData.h_files/shThemeEclipse.css" type="text/css">
  <script src="FMXBinaryData.h_files/mootools-core.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/core.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/caption.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/highslide-full.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/easing_equations.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/swfobject.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/en.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/highslide-sitesettings.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shCore.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushCpp.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushCSharp.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushCss.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushJava.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushJScript.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushPhp.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushPlain.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/shBrushXml.js" type="text/javascript"></script>
  <script src="FMXBinaryData.h_files/mootools-more.js" type="text/javascript"></script>
  <script type="text/javascript">
window.addEvent('load', function() {
				new JCaption('img.caption');
			});
hs.graphicsDir = '/plugins/content/highslide/graphics/';

			  SyntaxHighlighter.all();
		 
  </script>

	<!-- The following line loads the template CSS file located in the template folder. -->
	<link rel="stylesheet" href="FMXBinaryData.h_files/template.css" type="text/css">
<style type="text/css">.highslide img {cursor: url(/plugins/content/highslide/graphics/zmin.cur), pointer !important;}.highslide-viewport-size {position: fixed; width: 100%; height: 100%; left: 0; top: 0}</style></head>
<body id="page_bg">

	<div class="top-menu">
		<div id="sgmenu">
			
		</div>
	</div>

	<div id="mainwrap">
	<div id="header">
	

	
	
		<div id="search">
			<form action="/index.php/filemaker-plug-ins/fmxbinarydata-h" method="post">
	<div class="search">
		<label for="mod-search-searchword">Search...</label><input name="searchword" id="mod-search-searchword" maxlength="20" class="inputbox" size="20" value="Search..." onblur="if (this.value=='') this.value='Search...';" onfocus="if (this.value=='Search...') this.value='';" type="text">	<input name="task" value="search" type="hidden">
	<input name="option" value="com_search" type="hidden">
	<input name="Itemid" value="545" type="hidden">
	</div>
</form>

		</div>
	
		<h1><a href="http://www.culturalservices.nl/index.php/filemaker-plug-ins">Filemaker Plug-Ins</a></h1>					
		
	</div>
	<div id="wrapper">
		<div id="content_m">
						<div class="maincol_w_left">
						
									<div class="leftcol">
								<div class="module">
			<div>
				<div>
					<div>
													<h3>Filemaker</h3>
											








<ul class="menu">




<li id="item-535" class="active parent"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins"><span>Filemaker SDK headers</span></a><ul><li id="item-532"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxextern-h"><span>FMXExtern.h</span></a></li><li id="item-537"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxclient-h"><span>FMXClient.h</span></a></li><li id="item-538"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/datetime-h"><span>FMXDateTime.h</span></a></li><li id="item-539"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h"><span>FMXFixPt.h</span></a></li><li id="item-540"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h"><span>FMXTextStyle.h</span></a></li><li id="item-542"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtypes-h"><span>FMXTypes.h</span></a></li><li id="item-545" class="current active"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h"><span>FMXBinaryData.h</span></a></li><li id="item-546"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h"><span>FMXText.h</span></a></li><li id="item-543"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h"><span>FMXData.h</span></a></li><li id="item-544"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h"><span>FMXCalcEngine.h</span></a></li></ul></li><li id="item-536"><a href="http://culturalservices.nl/index.php/resources"><span>Resources</span></a></li></ul>					</div>
				</div>
			</div>
		</div>
	
					</div>
					
						<div class="cont">
							<div class="item-page">

	<h2>
			<a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h">
		FMXBinaryData.h</a>
		</h2>








<blockquote>
<p>The header FMXBinaryData.h is the most commented one in the FIlemaker SDK. It explains the use of the class <code> BinaryData</code> and its autopointer class as follows:</p>
<p>A BinaryData type is a collection of streams. Each stream has two 
parts, a TypeId and Data. There can be multiple related streams, but 
there should never be more than one stream of the same type.&nbsp; 
Streams should not be empty. Container fields can be considered to be of
 type BinaryData when data is stored in the database&nbsp;as opposed to 
objects inserted by reference (path of file as text).</p>
<p>To iterate through the streams of a BinaryData, use GetCount and then call GetIndex to get the TypeID for each stream.</p>
<p>To create a new BinaryData object, use the autoptr version to construct the object, then Add() streams.</p>
</blockquote>
<p>From this description we learn that we can use the <code> BinaryData</code> class to add streams to it. One stream consists of two things:</p>
<ol>
<li>A TypeID</li>
<li>Data</li>
</ol>
<p>There are some more comments on the type ID's in the header. Several types are mentioned:</p>
<blockquote>
<p>Here are some common QuadChar types you may encounter, and notes on required usage.</p>
<p>The actual format of the data should adhere to the standard documented by the format creator.</p>
<ul>
<li>"FNAM" is a filename stream. This is used either to display the 
filename of the file in the field (non-images or images that cannot be 
displayed) and for an initial suggested filename when exporting field 
contents. Please use the special accessors&nbsp;below ("GetFNAMData and 
AddFNAMData) to get a text representation of this data.</li>
<li>Images:</li>
</ul>
<p style="margin-left: 30px;">{ "JPEG", "GIFf", "EPS ", "PICT", "META", "PNGf", "BMPf", "PDF " }</p>
<p style="margin-left: 30px;">Images must have at least a JPEG or GIFf 
stream in addition to any&nbsp;other image type.&nbsp; A PICT stream 
must not have the 512 byte "file" header. The PICT stream should match 
the format that is used on the clipboard.&nbsp; A "SIZE" stream is also 
required for FileMaker to display the image. Please use the 
special&nbsp;accessors below (GetSIZEData and AddSIZEData) to get the 
height and width values&nbsp;for the image.</p>
<p style="margin-left: 30px;">When generating other kinds of graphical 
data, use JPEG for a preview, and the other format will be preferred if 
possible. For example, to generate&nbsp;a PNG picture, you have to add 
"PNGf" and "JPEG" 
streams.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p style="margin-left: 30px;">Combining "PNGf" and "GIFf" streams will cause the PNG to be ignored.&nbsp;</p>
<ul>
<li>Files:</li>
</ul>
<p style="margin-left: 30px;">{ "FILE" (binary file data), "FORK" (Mac only resource fork) }</p>
<ul>
<li>Sound:</li>
</ul>
<p style="margin-left: 30px;">{ "snd " }</p>
<p style="margin-left: 30px;">Always Mac raw format.</p>
<ul>
<li>Any other types you encounter are not documented for plug-in use. Use them at your own risk.</li>
</ul>
</blockquote>
<p>Here we already have a lot of types we can use. Before we will 
explain how to put type ID's and data into a stream, we will have a look
 at how we create the object that contains streams. This is done through
 the autopointer.</p>
<div><div id="highlighter_552415" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">BinaryDataAutoPtr : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">std::auto_ptr&lt;BinaryData&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">typedef</code> <code class="cpp plain">BinaryDataAutoPtr&nbsp;&nbsp; UpCaster;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">public</code><code class="cpp plain">:</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">inline</code> <code class="cpp plain">BinaryDataAutoPtr ();</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">inline</code> <code class="cpp plain">BinaryDataAutoPtr ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">BinaryData &amp;sourceData );</code></div><div class="line number7 index6 alt2"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>Two constructors are mentioned. The first creates an empty <code class="brush:cpp">
BinaryData</code> object. To the&nbsp;second you can pass a <code class="brush:cpp">
BinaryData</code> which is then used to initialize the <code class="brush:cpp">BinaryData</code> object. A third constructor is inherited from <code class="brush:cpp">
auto_ptr</code>. You pass it another <code class="brush:cpp">
BinaryDataAutoPtr</code>, the address of which is used to set the new autopointer.</p>
<p>Now that we know how to create a <code class="brush:cpp">BinaryData</code> object, let's have a look at what we can do with it. The class conatins the following functions:</p>
<ul>
<li>An assignment operator to transfer information from one object to another.</li>
<li>Two comparison operators to determine whether two objects contain the same values or not.</li>
<li>Six functions to retrieve information about and from an object.</li>
<li>Three functions to add and remove data streams from an obejct.</li>
<li>Two functions to&nbsp;add&nbsp;or retrieve a FNAM (filename) data stream.</li>
<li>Two functions to add or retrieve a&nbsp;SIZE (width and heigth of a picture) data stream.</li>
</ul>
<p>The assignment operator is used thus:</p>
<div><div id="highlighter_247746" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">fmx::BinaryDataAutoPtr BDA;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">fmx::BinaryDataAutoPtr BDA2;</code></div><div class="line number3 index2 alt2"><code class="cpp plain">*BDA2 = *BDA;</code></div></div></td></tr></tbody></table></div></div>
<p>The comparison operators checks whether the streams contained in the 
objects have the same types and the same data. Objects are considered 
the same independent of the order (indexes) of the streams in them. An 
object with a SIZE stream at index 0 and a PICT stream at 1 is the same 
as an object with PICT at 0 and SIZE at 1 if the data of the types 
match.</p>
<p>Then there are six functions to retrieve information from an object.</p>
<p><code class="brush:cpp">GetCount</code>: returns the number of streams contained in an object. If you create a new object its count is 0.</p>
<p><code class="brush:cpp">
GetIndex( const QuadChar&amp; dataType )</code>: searches the Type ID&nbsp;(contained in a <code class="brush:cpp">
QuadChar</code> object that you pass to it) among the streams of the 
calling object. It returns the index of the stream in the object, so you
 know which data stream has the Type ID that you need. For example, if 
you have only one stream - with type FNAM -&nbsp;in a <code class="brush:cpp">
BinaryData</code> object called <code class="brush:cpp">
BinDatObjPtr</code>:</p>
<div><div id="highlighter_338320" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">fmx::QuadCharAutoPtr QAP( </code><code class="cpp string">'F'</code><code class="cpp plain">, </code><code class="cpp string">'N'</code><code class="cpp plain">, </code><code class="cpp string">'A'</code><code class="cpp plain">, </code><code class="cpp string">'M'</code> <code class="cpp plain">);</code></div><div class="line number2 index1 alt1"><code class="cpp plain">fmx::int32 ret = BinDatObjPtr-&gt;GetIndex( *QAP ); </code><code class="cpp comments">//the index returned = 0</code></div></div></td></tr></tbody></table></div></div>
<p><code class="brush:cpp">
GetTotalSize</code>: returns the total size of the calling object.</p>
<p><code class="brush:cpp">
GetType ( int32 index, QuadChar&amp; dataType )</code>: when you pass an index and an (empty) <code class="brush:cpp">
QuadChar</code> object, the <code class="brush:cpp">
QuadChar</code> is filled with the Type ID of the stream at the index.</p>
<p><code class="brush:cpp">
GetSize ( int32 index )</code>: returns the size of a particular stream at the index you pass to it.</p>
<p><code class="brush:cpp">
GetData ( int32 index, uint32 offset, uint32 amount, void *buffer )</code>:
 fills a buffer that you pass to it with data in the stream at the index
 you provide. You can use an offset or amount if you do not want to get 
the whole stream. Using offset 0 will get you the stream from the 
beginning. Using an amount smaller than the size of the stream at the 
index, will get you part of the stream. Passing the result of <code class="brush:cpp">
GetSize</code> will get you the whole stream (provided you did not use 
offset). This method returns an error code. Check it, and when it is not
 0 act on it.</p>
<p>Then there are three functions to add and remove a particular stream from an object.</p>
<p><code class="brush:cpp">
Add ( const QuadChar&amp; dataType, uint32 amount, void *buffer )</code>: This method adds a stream to the calling object consisting of a TypeID&nbsp;(the <code class="brush:cpp">
QuadChar</code>) and a buffer. You also need to provide the amount of bytes in the buffer that you wanr to add.</p>
<p><code class="brush:cpp">
Remove ( const QuadChar&amp; dataType )</code>: removes the stream of the TypeID you specify. A <code class="brush:cpp">
BinaryData</code> object can only one stream of a particular type, so 
this method should always removes only one stream. Check the boolean 
that is returned to see whether the file is remove (1) or not (0).</p>
<p><code class="brush:cpp">
RemoveAll</code>: removes all datastreams from the calling object.</p>
<p>The following function are easy-to-use specialized versions of the <code class="brush:cpp">
Add</code> method. Check the error codes they return to see if everything went allright.</p>
<p><code class="brush:cpp">
GetFNAMData ( Text &amp;filepathlist )</code>:&nbsp;retrieves 
information from&nbsp;a stream with FNAM as TypeID and puts a text 
representation in the&nbsp;filepathlist object you pass to it. The 
filepathlist in the stream not the stream is not in text format but 
in&nbsp;binary format. You can&nbsp;add a binary data stream&nbsp;of 
type FNAM by passing a text representation to <code class="brush:cpp">
AddFNAMData ( const Text &amp;filepathlist )</code>.</p>
<p><code class="brush:cpp">
GetSIZEData</code> and <code class="brush:cpp">
AddSIZEData</code> use the same procedure as above to add or retrieve shorts from a SIZE type stream, representing width and heigth of a picture.</p>
<p>&nbsp;</p>
	
</div>

						</div>
					
								<div class="clr"></div>
			</div>
		</div>
		<div id="footer">
			<p style="text-align:center;">
 	Van der Linden Cultural Services, Powered by <a href="http://joomla.org/" class="sgfooter" target="_blank">Joomla!</a>

	

	
	

</p>
		</div>
		</div>
	</div>
	<div id="footergrad">&nbsp;</div>

<div style="padding: 0px; border: medium none; margin: 0px; position: absolute; left: 0px; top: 0px; width: 100%; z-index: 1001; direction: ltr;" class="highslide-container"><a style="position: absolute; top: -9999px; opacity: 0.75; z-index: 1;" href="javascript:;" title="Click to cancel" class="highslide-loading">Loading...</a><div style="display: none;"></div><div style="padding: 0px; border: medium none; margin: 0px; visibility: hidden;" class="highslide-viewport highslide-viewport-size"></div><table style="padding: 0px; border: medium none; margin: 0px; visibility: hidden; position: absolute; border-collapse: collapse; width: 0px;" cellspacing="0"><tbody style="padding: 0px; border: medium none; margin: 0px;"><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px 0px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -40px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px 0px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -80px; height: 20px; width: 20px;"></td><td class="drop-shadow highslide-outline" style="padding: 0px; border: medium none; margin: 0px; position: relative;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -80px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -20px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -60px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -20px; height: 20px; width: 20px;"></td></tr></tbody></table></div></body></html>