<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html slick-uniqueid="3" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" dir="ltr" lang="en-gb"><head>
<script src="FMXText.h_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-34699114-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	  <!-- base href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h" -->
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="keywords" content="productie, podiumkunsten, cultuur, cultuursector, copywriter, teksten, tekstschrijver, programmatoelichting, programmaboek, redactie, redacteur,planning, concerten, festivals, subsidieaanvragen, ensembles, Filemaker sdk headers, filemaker, sdk, filemaker api, api, plug-ins, plug-in, filemaker plug-in, filemaker plug-ins, ">
  <meta name="author" content="Super User">
  <meta name="description" content="Van der Linden Cultural Services levert diensten in de cultuursector. U kunt terecht voor teksten (zakelijk en informatief), productie en stage management in de podiumkunsten, Filemaker-database-development, transport, etc.">
  <meta name="generator" content="Joomla! - Open Source Content Management">
  <title>Van der Linden Cultural Services - FMXText.h</title>
  <link href="http://culturalservices.nl/index.php/component/search/?Itemid=546&amp;format=opensearch" rel="search" title="Search Van der Linden Cultural Services" type="application/opensearchdescription+xml">
  <link rel="stylesheet" href="FMXText.h_files/highslide.css" type="text/css">
  <link rel="stylesheet" href="FMXText.h_files/highslide-sitestyles.css" type="text/css">
  <link rel="stylesheet" href="FMXText.h_files/shCoreEclipse.css" type="text/css">
  <link rel="stylesheet" href="FMXText.h_files/shThemeEclipse.css" type="text/css">
  <script src="FMXText.h_files/mootools-core.js" type="text/javascript"></script>
  <script src="FMXText.h_files/core.js" type="text/javascript"></script>
  <script src="FMXText.h_files/caption.js" type="text/javascript"></script>
  <script src="FMXText.h_files/highslide-full.js" type="text/javascript"></script>
  <script src="FMXText.h_files/easing_equations.js" type="text/javascript"></script>
  <script src="FMXText.h_files/swfobject.js" type="text/javascript"></script>
  <script src="FMXText.h_files/en.js" type="text/javascript"></script>
  <script src="FMXText.h_files/highslide-sitesettings.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shCore.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushCpp.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushCSharp.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushCss.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushJava.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushJScript.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushPhp.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushPlain.js" type="text/javascript"></script>
  <script src="FMXText.h_files/shBrushXml.js" type="text/javascript"></script>
  <script src="FMXText.h_files/mootools-more.js" type="text/javascript"></script>
  <script type="text/javascript">
window.addEvent('load', function() {
				new JCaption('img.caption');
			});
hs.graphicsDir = '/plugins/content/highslide/graphics/';

			  SyntaxHighlighter.all();
		 
  </script>

	<!-- The following line loads the template CSS file located in the template folder. -->
	<link rel="stylesheet" href="FMXText.h_files/template.css" type="text/css">
<style type="text/css">.highslide img {cursor: url(/plugins/content/highslide/graphics/zmin.cur), pointer !important;}.highslide-viewport-size {position: fixed; width: 100%; height: 100%; left: 0; top: 0}</style></head>
<body id="page_bg">

	<div class="top-menu">
		<div id="sgmenu">
			
		</div>
	</div>

	<div id="mainwrap">
	<div id="header">
	

	
	
		<div id="search">
			<form action="/index.php/filemaker-plug-ins/fmxtext-h" method="post">
	<div class="search">
		<label for="mod-search-searchword">Search...</label><input name="searchword" id="mod-search-searchword" maxlength="20" class="inputbox" size="20" value="Search..." onblur="if (this.value=='') this.value='Search...';" onfocus="if (this.value=='Search...') this.value='';" type="text">	<input name="task" value="search" type="hidden">
	<input name="option" value="com_search" type="hidden">
	<input name="Itemid" value="546" type="hidden">
	</div>
</form>

		</div>
	
		<h1><a href="http://www.culturalservices.nl/index.php/filemaker-plug-ins">Filemaker Plug-Ins</a></h1>					
		
	</div>
	<div id="wrapper">
		<div id="content_m">
						<div class="maincol_w_left">
						
									<div class="leftcol">
								<div class="module">
			<div>
				<div>
					<div>
													<h3>Filemaker</h3>
											








<ul class="menu">




<li id="item-535" class="active parent"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins"><span>Filemaker SDK headers</span></a><ul><li id="item-532"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxextern-h"><span>FMXExtern.h</span></a></li><li id="item-537"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxclient-h"><span>FMXClient.h</span></a></li><li id="item-538"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/datetime-h"><span>FMXDateTime.h</span></a></li><li id="item-539"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h"><span>FMXFixPt.h</span></a></li><li id="item-540"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h"><span>FMXTextStyle.h</span></a></li><li id="item-542"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtypes-h"><span>FMXTypes.h</span></a></li><li id="item-545"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h"><span>FMXBinaryData.h</span></a></li><li id="item-546" class="current active"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h"><span>FMXText.h</span></a></li><li id="item-543"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h"><span>FMXData.h</span></a></li><li id="item-544"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h"><span>FMXCalcEngine.h</span></a></li></ul></li><li id="item-536"><a href="http://culturalservices.nl/index.php/resources"><span>Resources</span></a></li></ul>					</div>
				</div>
			</div>
		</div>
	
					</div>
					
						<div class="cont">
							<div class="item-page">

	<h2>
			<a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h">
		FMXText.h</a>
		</h2>








<p><code class="brush:cpp">
</code>FMXText.h deals with text. It contains the class <code class="brush:cpp">
Text</code> and its autopointer <code class="brush:cpp">
TextAutoPtr</code>.</p>
<p>To create an object of class <code class="brush:cpp">Text</code> we need&nbsp;<code class="brush:cpp">TextAutoPtr</code>. This class has the following constructors.</p>
<div><div id="highlighter_560178" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">TextAutoPtr : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">std::auto_ptr&lt;Text&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">typedef</code> <code class="cpp plain">TextAutoPtr&nbsp;&nbsp;&nbsp;&nbsp; UpCaster;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">public</code><code class="cpp plain">:</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">inline</code> <code class="cpp plain">TextAutoPtr ();</code></div><div class="line number6 index5 alt1"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>As you can see, there is only one constructor, with no parameters. Simply write <code class="brush:cpp">
fmx::TextAutoPtr TAP;</code> and you have an autopointer object pointing to a <code class="brush:cpp">
Text</code> object.</p>
<p>The first thing we encounter in the class&nbsp;<code class="brush:cpp">Text</code> is an Encoding enumeration.</p>
<div><div id="highlighter_982849" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">enum</code> <code class="cpp plain">Encoding</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Native,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// The platform's default</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_UTF8,</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ASCII_DOS,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// OEM/DOS</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ASCII_Windows,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows ANSI</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ASCII_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Roman</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Latin 1</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ShiftJIS_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Japanese Shift JIS Mac</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ShiftJIS_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Japanese Shift JIS Windows</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Korean_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Korean</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Korean_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Korean Unified Hangul (949)</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Korean_Johab,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Korean Johab (1361)</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ChineseTrad_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Traditional Chinese</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ChineseTrad_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Traditional Chinese (950)</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ChineseSimp_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Simplified Chinese</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ChineseSimp_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Simplified Chinese (936)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Cyrillic_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Russian</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Cyrillic_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Russian (1251)</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_5,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// ISO Cyrillic </code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_CentralEurope_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Central Europe</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_EasternEurope_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Eastern Europe (1250)</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_2,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Central Europe</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Turkish_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Turkish</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Turkish_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Turkish (1254)</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_3,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Latin 3</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_9,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Latin 5</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Baltic_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Baltic (1257)</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_4,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Baltic</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Arabic_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Arabic</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Arabic_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Arabic (1256)</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_6,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Arabic</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Greek_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Greek</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Greek_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Greek (1253)</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_7,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Greek</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Hebrew_Mac,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Mac Hebrew</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_Hebrew_Win,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Windows Hebrew (1255)</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_8,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Hebrew: Visual Ordering</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kEncoding_ISO_8859_15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Latin 9</code></div><div class="line number40 index39 alt1"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>With every text you assign to a <code class="brush:cpp">
Text</code> you also&nbsp;have to&nbsp;pass the encoding you would like 
it to use, provided you do not use Unicode or wide characters. 
Characters are represented by code. Different encodings use different 
characters with different codes. We will first have a look at the 
functions used to put text into a <code class="brush:cpp">
Text</code> object and then look at how character encodings fit in.</p>
<p>
</p><div><div id="highlighter_661373" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">uint32 GetSize() </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// These three methods expect null terminated strings.</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Assign ( </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">char</code> <code class="cpp plain">*s, Encoding encoding = kEncoding_Native );</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignWide ( </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">wchar_t</code> <code class="cpp plain">*s );</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignUnicode ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">uint16 *s );</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignWithLength ( </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">char</code> <code class="cpp plain">*s, uint32 strlength, Encoding encoding = kEncoding_Native );</code></div><div class="line number7 index6 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignWideWithLength ( </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">wchar_t</code> <code class="cpp plain">*s, uint32 strlength );</code></div><div class="line number8 index7 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignUnicodeWithLength ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">uint16 *s, uint32 strlength );</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Buffer size is in bytes, position and size are in Unicode characters, encoded bytes copied to buffer with a null terminator</code></div><div class="line number10 index9 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">GetBytes ( </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*charbuffer, uint32 buffersize, uint32 position = 0, uint32 size = kSize_End, Encoding encoding = kEncoding_Native ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Position and size are in Unicode characters, characters copied to unicodebuffer without any terminating null character</code></div><div class="line number12 index11 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">GetUnicode ( uint16 *unicodebuffer, uint32 position, uint32 size ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>&nbsp;</p>
<p>The first method, <code class="brush:cpp">
GetSize</code>,&nbsp;returns the size of the text string&nbsp;in the <code class="brush:cpp">
Text</code> object. The size is independent of the kind of string that is stored. Whether <code class="brush:cpp">
char</code>s, <code class="brush:cpp">
wchar_t</code>s, or Unicode characters, the method always returns the number of characters.</p>
<p>Then there are three <code class="brush:cpp">
Assign</code> methods to which you pass null terminated strings. (In 
null terminated strings the last character of the string should be 
character '\0'.) The three functions take three kinds of strings. The 
first takes ordinary <code class="brush:cpp">
char</code>s (or rather a pointer to a string of<code class="brush:cpp">char</code>s) as argument. The second takes a <code class="brush:cpp">
wchar_t *</code> (a wide character string; the t-suffix&nbsp;means it is a type definition)&nbsp;as argument. The third takes an&nbsp;<code class="brush:cpp">uint16 *</code>&nbsp;(<code class="brush:cpp">unsigned short *</code> or Unicode)&nbsp;string.</p>
<p>The next three functions take the same three types of string, only 
these strings do not have to be null terminated. You should supply a 
length instead of the null termination.</p>
<p>The <code class="brush:cpp">
GetBytes</code> method is used to retrieve a <code class="brush:cpp">
char *</code> string (in a buffer you pass to it) from the <code class="brush:cpp">
Text</code> object. (The name points to the fact that <code class="brush:cpp">
char</code>s are always one byte in size.) The second argument is the size you want the buffer to have. You can use the <code class="brush:cpp">
GetSize</code> method of the object if you want the full text, but you 
should add 1 in order to accommodate&nbsp;the null character at the end.
 You can use the third and fourth argument to specify a start position 
and length of the string you want to read. Finally a last argument 
specifies the type of encoding, which is explained in detail below. One 
thing of note is that the fourth argument has a default value of <code class="brush:cpp">
kSize_End</code>, which is one of two values in an enumeration:</p>
<p>
</p><div><div id="highlighter_278408" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">enum</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kSize_Invalid = 0xFFFFFFFF,</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kSize_End = 0xFFFFFFFF</code></div><div class="line number5 index4 alt2"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>&nbsp;</p>
<p>The latter is the maximum hexadecimal value a 32-bit value can have 
(in numbers: 4294967295). It is the absolute maximum of the number of 
Unicode characters in a <code class="brush:cpp">
Text</code> object. You can use the first value of this enumeration (<code class="brush:cpp">kSize_Invalid</code>) to check whether a string passed to a <code class="brush:cpp">
Text</code> object is to long or not.</p>
<p>The following method, <code class="brush:cpp">
GetUnicode</code>, is used to retrieve the text from a <code class="brush:cpp">Text</code> object into a Unicode buffer that you pass to it. Use the second and third argument to only retrieve part of the text.&nbsp;</p>
<p>Because each of these characters&nbsp;is the size of one byte (which 
has eight bits), a single character can be of value 0 to 255, so there 
are 256 possible values for each character. Because this is not nearly 
enough to accommodate all possible characters, different character sets 
were created to map the right characters to the right byte value. The 
Windows character set with number 1252 has the following 256 character 
(of which the blue dots represent unused or control characters.</p>
<p><img alt="" src="FMXText.h_files/1252.jpg"></p>
<p>This character encoding set is the one given the enumeration value <code class="brush:cpp">
kEncoding_ASCII_Windows</code>in the Filemaker SDK. Whenever you pass 
the string containing "!", this character is stored as number 34 with 
code set 1252. This code page is for the most part consistent with the 
standardized <span dir="auto">ISO/IEC 8859-1 code page.</span></p>
<p><span dir="auto">Mac OSX computers also have their standard code 
page. It is called "Mac OS Roman" (or ,on Windows, "Western European 
(Mac) - Codepage 10000"). Like the Windows-1252, this code page also 
coincides for the most part with the standard <span dir="auto">ISO/IEC 8859-1</span> code page.</span></p>
<p><span dir="auto"><img alt="" src="FMXText.h_files/mac%2520os%2520roman.jpg"></span></p>
<p><span dir="auto"></span>As you can see, the first 127 characters 
codes are the same for Windows-1252 and Mac OS Roman. You are doing fine
 if you use&nbsp;these characters and supply either the <code class="brush:cpp">
kEncoding_ASCII_Windows</code> or the <code class="brush:cpp">
kEncoding_ASCII_Mac</code> value as the second parameter to the first&nbsp;<code class="brush:cpp">Assign</code> method. If you want to use other characters, you should use <code class="brush:cpp">
kEncoding_Native</code>. The folowing procedure is used when you use string literals (between double quotation marks) in your source code.&nbsp;</p>
<ol>
<li>The compiler compiles the value of each of the character you 
provide. This number depends on the codepage used in the source file of 
your plug-in. Character "¶" in Visual Studio is probably encoded with 
codepage Windows-1252 (<code class="brush:cpp">kEncoding_ASCII_Windows</code>) and has number value 182. Using XCode, the code page is probably Mac OS Roman, and "¶" has value 166.</li>
<li>When your plug-in is running the <code class="brush:cpp">
Assign</code> method, Filemaker finds the character corresponding 
to&nbsp;the stored value on the encoding&nbsp;scheme you supplied. On 
Mac, stored number 166 with value <code class="brush:cpp">kEncoding_ASCII_Windows</code>&nbsp;will make Filemaker think you meant character "¦". On Windows, stored number&nbsp;182 with&nbsp;code page value&nbsp;<code class="brush:cpp">kEncoding_ASCII_Mac</code>&nbsp;points Filemaker to character "<span style="font-family: monospace; font-size: large;">∂</span>".</li>
<li>In the Unicode table, Filemaker finds a value corresponding to the 
character, and stores that value. When&nbsp;the code table of the 
corresponding OS is used, the Unicode value&nbsp;of the paragraph mark 
is&nbsp;U+00B6 ("¶"). Using Mac encoding on Windows the value stored is 
U+00A6&nbsp;("¦"), using Windows encoding on Mac, the Unicode value is 
U+2202 ("<span style="font-family: monospace; font-size: large;">∂</span>").</li>
</ol>
<p>You should be aware that only the&nbsp;Unicode value&nbsp;is stored, 
not the character value&nbsp;you supplied. (The Unicode values can be 
found <a href="http://en.wikipedia.org/wiki/List_of_Unicode_characters" target="_blank">here</a>.) The following is a code example of the procedure above, extended with the <code class="brush:cpp">
GetBytes</code> method.</p>
<p>
</p><div><div id="highlighter_451362" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">//Example of Mac environment</code></div><div class="line number2 index1 alt1"><code class="cpp color1 bold">char</code> <code class="cpp plain">* str;</code></div><div class="line number3 index2 alt2"><code class="cpp plain">fmx::TextAutoPtr TAP;</code></div><div class="line number4 index3 alt1"><code class="cpp plain">TAP-&gt;Assign(</code><code class="cpp string">"¶"</code><code class="cpp plain">,fmx::Text::kEncoding_ASCII_Mac);</code></div><div class="line number5 index4 alt2"><code class="cpp comments">//value 166 of the paragraph mark is plotted to Unicode character U+00B6</code></div><div class="line number6 index5 alt1"><code class="cpp plain">TAP-&gt;GetBytes(str,TAP-&gt;GetSize()+1,0UL,1UL,fmx::Text::kEncoding_ASCII_Windows);</code></div><div class="line number7 index6 alt2"><code class="cpp comments">//Unicode character U+00B6 is found on the cp-1252 as having value 182</code></div><div class="line number8 index7 alt1"><code class="cpp comments">//When you ask Filemaker to display the character (on Mac) </code></div><div class="line number9 index8 alt2"><code class="cpp comments">//it will use the default system code page, which is probably Mac OS Roman.</code></div><div class="line number10 index9 alt1"><code class="cpp comments">//Character value 182 on this code page is "∂"</code></div></div></td></tr></tbody></table></div></div>
<p>Now that we have tackled some aspects of character encoding, it is 
time to move on to the next part of the header. THe following four 
functions accomplish much the same the <code class="brush:cpp">
Assign</code> methods, but now the input consists of other <code class="brush:cpp">
Text</code> objects.</p>
<div><div id="highlighter_365623" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetText ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position = 0, uint32 size = kSize_End );</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AppendText ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position = 0, uint32 size = kSize_End );</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">InsertText ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position );</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">DeleteText ( uint32 positionToDelete, uint32 sizeToDelete = kSize_End );</code></div></div></td></tr></tbody></table></div></div>
<p>The first method, <code class="brush:cpp">
SetText</code>,&nbsp; is used to overwrite the existing text in the 
calling object by text from another object. Use the start position and 
length arguments to only set part of the new text. The second, <code class="brush:cpp">
AppendText</code>&nbsp;puts&nbsp;the text from another obect at the end 
of the calling object. To only append part of the other text use the 
start position and size arguments. The <code class="brush:cpp">
InsertText</code> method insert another text into the calling object's 
text at the position you pass to it. You cannot insert only a part of 
the other text.<code class="brush:cpp">
DeleteText</code> deletes text from the object according to the postion and size you pass to it.</p>
<p>These methods are followed by four&nbsp;<code class="brush:cpp">Find</code> methods. The first two, <code class="brush:cpp">
Find</code> and <code class="brush:cpp">
FindPrev</code> are case sensitive, the other two, <code class="brush:cpp">
FindIgnoringCase</code> and <code class="brush:cpp">
FindPrevIgnoringCase</code>,&nbsp;not. All of these functions return -1 if the text is not found.</p>
<div><div id="highlighter_363456" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">uint32 Find ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp plain">uint32 FindPrev ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">uint32 FindIgnoringCase ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp plain">uint32 FindPrevIgnoringCase ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;other, uint32 position ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>The <code class="brush:cpp">
Find</code> method&nbsp;returns the position (starting with first letter at 0) in the calling object of the first character of the <code class="brush:cpp">
Text</code> you pass to it. You can pass a second argument if you want 
to start you find from a certain position to the end of the calling 
object's text. The <code class="brush:cpp">
FindPrev</code> returns the position of the first letter of the text 
passed to it when it is found in the calling object. This method starts 
from the position you provide and searches the caling object's text 
backward. To search the whole string from the end, you can pass position
 <code class="brush:cpp">
fmx::Text::kSize_End - 1</code>. If you go any higher your position will be considered starting from 0 at <code class="brush:cpp">fmx::Text::kSize_End</code>.</p>
<p>The next methods, <code class="brush:cpp">
Uppercase</code> and <code class="brush:cpp">
Lowercase</code>, will transform the letters in the calling object to capitals or vice-versa.</p>
<p>The last five regular&nbsp;methods all deal with textstyle. Any text 
in a field on a layout in Filemaker has already got a style (font, 
fontsize, color, etc.). This is considered the default style in the 
Filemaker SDK. The first to methods are:</p>
<p>
</p><div><div id="highlighter_602024" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">GetStyle( CharacterStyle&amp; style, uint32 position ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">GetDefaultStyle( CharacterStyle&amp; style ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>&nbsp;</p>
<p>The first retrieves the&nbsp;text style into a <code class="brush:cpp">
CharacterStyle</code> object&nbsp;(see <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h">FMXTextStyle.h</a>) from a certain position onwards. The second gets you the default style of the field on the layout.</p>
<p>The next style method is used to set a style you have created.</p>
<p>
</p><div><div id="highlighter_736895" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetStyle( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">CharacterStyle&amp; style, uint32 position = 0, uint32 size = kSize_End );</code></div></div></td></tr></tbody></table></div></div>
<p>The Filemaker SDK comment the following, which does not need any further explanation:</p>
<blockquote>
<p>Overwrites any existing CharacterStyle in this Text at position..(position+size)</p>
</blockquote>
<p>The next function, <code class="brush:cpp">
RemoveStyle</code>&nbsp;has a very long comment&nbsp;on it in the SDK.</p>
<blockquote>
<p>Removes the given style.&nbsp; This will remove elements of the given
 style&nbsp;that match exactly with the current styles.&nbsp; For 
example, if the given style specifies a size of 12, then styles in the 
text that are size 12 will be disabled, thus picking up the default 
style.</p>
</blockquote>
<div><div id="highlighter_569524" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">RemoveStyle( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">CharacterStyle&amp; style );</code></div></div></td></tr></tbody></table></div></div>
<p>In essence, by using this method you tell Filemaker to remove every 
aspect of the style you supply from the text you use the method on.</p>
<p>The last style method is used to remove all the styles from the 
calling object. The object uses the default style after you have called 
this function.</p>
<div><div id="highlighter_281673" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">ResetAllStyleBuffers();</code></div></div></td></tr></tbody></table></div></div>
<p>The last thing we&nbsp;have to discuss are the&nbsp;comparion operator functions.</p>
<div><div id="highlighter_100512" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator == ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator != ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &lt; ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &lt;= ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &gt; ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &gt;= ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>These compare only the text in the <code class="brush:cpp">
Text</code>objects, and do not care about any styling applied to them. 
The greater than and smaller than operators search a string from left to
 right and return a result when they find non-equal characters.</p>
<p>Note that there is no assignment operator=. The default assignment 
operator should work in such cases. However, it does not copy anything, 
because there are no member variables in this class that can be copied. 
So, the default assignment operator does work and does not give you any 
errors, but nothing happens when you use it. To assign one <code class="brush:cpp">
Text</code> object to another you have to use the <code class="brush:cpp">
SetText</code> method.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
	
</div>

						</div>
					
								<div class="clr"></div>
			</div>
		</div>
		<div id="footer">
			<p style="text-align:center;">
 	Van der Linden Cultural Services, Powered by <a href="http://joomla.org/" class="sgfooter" target="_blank">Joomla!</a>

	

	
	

</p>
		</div>
		</div>
	</div>
	<div id="footergrad">&nbsp;</div>

<div style="padding: 0px; border: medium none; margin: 0px; position: absolute; left: 0px; top: 0px; width: 100%; z-index: 1001; direction: ltr;" class="highslide-container"><a style="position: absolute; top: -9999px; opacity: 0.75; z-index: 1;" href="javascript:;" title="Click to cancel" class="highslide-loading">Loading...</a><div style="display: none;"></div><div style="padding: 0px; border: medium none; margin: 0px; visibility: hidden;" class="highslide-viewport highslide-viewport-size"></div><table style="padding: 0px; border: medium none; margin: 0px; visibility: hidden; position: absolute; border-collapse: collapse; width: 0px;" cellspacing="0"><tbody style="padding: 0px; border: medium none; margin: 0px;"><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px 0px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -40px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px 0px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -80px; height: 20px; width: 20px;"></td><td class="drop-shadow highslide-outline" style="padding: 0px; border: medium none; margin: 0px; position: relative;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -80px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -20px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -60px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -20px; height: 20px; width: 20px;"></td></tr></tbody></table></div></body></html>