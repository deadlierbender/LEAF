<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html slick-uniqueid="3" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" dir="ltr" lang="en-gb"><head>
<script src="FMXData.h_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-34699114-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	  <!-- base href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h" -->
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="keywords" content="productie, podiumkunsten, cultuur, cultuursector, copywriter, teksten, tekstschrijver, programmatoelichting, programmaboek, redactie, redacteur,planning, concerten, festivals, subsidieaanvragen, ensembles, Filemaker sdk headers, filemaker, sdk, filemaker api, api, plug-ins, plug-in, filemaker plug-in, filemaker plug-ins, ">
  <meta name="author" content="Super User">
  <meta name="description" content="Van der Linden Cultural Services levert diensten in de cultuursector. U kunt terecht voor teksten (zakelijk en informatief), productie en stage management in de podiumkunsten, Filemaker-database-development, transport, etc.">
  <meta name="generator" content="Joomla! - Open Source Content Management">
  <title>Van der Linden Cultural Services - FMXData.h</title>
  <link href="http://culturalservices.nl/index.php/component/search/?Itemid=543&amp;format=opensearch" rel="search" title="Search Van der Linden Cultural Services" type="application/opensearchdescription+xml">
  <link rel="stylesheet" href="FMXData.h_files/highslide.css" type="text/css">
  <link rel="stylesheet" href="FMXData.h_files/highslide-sitestyles.css" type="text/css">
  <link rel="stylesheet" href="FMXData.h_files/shCoreEclipse.css" type="text/css">
  <link rel="stylesheet" href="FMXData.h_files/shThemeEclipse.css" type="text/css">
  <script src="FMXData.h_files/mootools-core.js" type="text/javascript"></script>
  <script src="FMXData.h_files/core.js" type="text/javascript"></script>
  <script src="FMXData.h_files/caption.js" type="text/javascript"></script>
  <script src="FMXData.h_files/highslide-full.js" type="text/javascript"></script>
  <script src="FMXData.h_files/easing_equations.js" type="text/javascript"></script>
  <script src="FMXData.h_files/swfobject.js" type="text/javascript"></script>
  <script src="FMXData.h_files/en.js" type="text/javascript"></script>
  <script src="FMXData.h_files/highslide-sitesettings.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shCore.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushCpp.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushCSharp.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushCss.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushJava.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushJScript.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushPhp.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushPlain.js" type="text/javascript"></script>
  <script src="FMXData.h_files/shBrushXml.js" type="text/javascript"></script>
  <script src="FMXData.h_files/mootools-more.js" type="text/javascript"></script>
  <script type="text/javascript">
window.addEvent('load', function() {
				new JCaption('img.caption');
			});
hs.graphicsDir = '/plugins/content/highslide/graphics/';

			  SyntaxHighlighter.all();
		 
  </script>

	<!-- The following line loads the template CSS file located in the template folder. -->
	<link rel="stylesheet" href="FMXData.h_files/template.css" type="text/css">
<style type="text/css">.highslide img {cursor: url(/plugins/content/highslide/graphics/zmin.cur), pointer !important;}.highslide-viewport-size {position: fixed; width: 100%; height: 100%; left: 0; top: 0}</style></head>
<body id="page_bg">

	<div class="top-menu">
		<div id="sgmenu">
			
		</div>
	</div>

	<div id="mainwrap">
	<div id="header">
	

	
	
		<div id="search">
			<form action="/index.php/filemaker-plug-ins/fmxdata-h" method="post">
	<div class="search">
		<label for="mod-search-searchword">Search...</label><input name="searchword" id="mod-search-searchword" maxlength="20" class="inputbox" size="20" value="Search..." onblur="if (this.value=='') this.value='Search...';" onfocus="if (this.value=='Search...') this.value='';" type="text">	<input name="task" value="search" type="hidden">
	<input name="option" value="com_search" type="hidden">
	<input name="Itemid" value="543" type="hidden">
	</div>
</form>

		</div>
	
		<h1><a href="http://www.culturalservices.nl/index.php/filemaker-plug-ins">Filemaker Plug-Ins</a></h1>					
		
	</div>
	<div id="wrapper">
		<div id="content_m">
						<div class="maincol_w_left">
						
									<div class="leftcol">
								<div class="module">
			<div>
				<div>
					<div>
													<h3>Filemaker</h3>
											








<ul class="menu">




<li id="item-535" class="active parent"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins"><span>Filemaker SDK headers</span></a><ul><li id="item-532"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxextern-h"><span>FMXExtern.h</span></a></li><li id="item-537"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxclient-h"><span>FMXClient.h</span></a></li><li id="item-538"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/datetime-h"><span>FMXDateTime.h</span></a></li><li id="item-539"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h"><span>FMXFixPt.h</span></a></li><li id="item-540"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h"><span>FMXTextStyle.h</span></a></li><li id="item-542"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtypes-h"><span>FMXTypes.h</span></a></li><li id="item-545"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h"><span>FMXBinaryData.h</span></a></li><li id="item-546"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h"><span>FMXText.h</span></a></li><li id="item-543" class="current active"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h"><span>FMXData.h</span></a></li><li id="item-544"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h"><span>FMXCalcEngine.h</span></a></li></ul></li><li id="item-536"><a href="http://culturalservices.nl/index.php/resources"><span>Resources</span></a></li></ul>					</div>
				</div>
			</div>
		</div>
	
					</div>
					
						<div class="cont">
							<div class="item-page">

	<h2>
			<a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h">
		FMXData.h</a>
		</h2>








<p>The header FMXData.h class <code class="brush:cpp">
Data</code> and its autopointer. This class acts as a container for all 
the types we have encountered thusfar. The autopointer class contains 
only one constructor, <code class="brush:cpp">
inline DataAutoPtr ()</code>, so the way to create a <code class="brush:cpp">
Data</code> object is as follows.</p>
<div><div id="highlighter_312336" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">fmx::DataAutoPtr DAP;</code></div></div></td></tr></tbody></table></div></div>
<p>Now you have an autopointer pointing to a <code class="brush:cpp">Data</code> object.</p>
<p>This object can contain different objects of other classes. The enumeration <code class="brush:cpp">
DataType</code> gives us all the options.</p>
<div><div id="highlighter_730944" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">enum</code> <code class="cpp plain">DataType</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTInvalid,</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTText,</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTNumber,</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTDate,</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTTime,</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTTimeStamp,</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTBinary,</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">kDTBoolean</code></div><div class="line number11 index10 alt2"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>A <code class="brush:cpp">Data</code> object can contain only one of these type at a time. Whenever the <code class="brush:cpp">
DataType</code> of a <code class="brush:cpp">
Data</code> object is <code class="brush:cpp">
kDTInvalid</code> it contains no valid data of any kind. When the <code class="brush:cpp">Data</code> object is empty it contain nothing. You can check these capacities using the first two methods.</p>
<div><div id="highlighter_524065" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">IsEmpty () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">IsValid () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>When you have created a new <code class="brush:cpp">Data</code> object, both&nbsp;<code class="brush:cpp">IsEmpty</code> and <code class="brush:cpp">
IsValid</code> return <code class="brush:cpp">
true</code>. The <code class="brush:cpp">IsValid</code> method only returns <code class="brush:cpp">
false</code> when the&nbsp;<code class="brush:cpp">DataType</code> is set to <code class="brush:cpp">kDTInvalid</code>.</p>
<p>The next method, <code class="brush:cpp">
IsFindRequest</code>&nbsp;is used to check whether the <code class="brush:cpp">
Data
</code>is part of a Find Request in Filemaker.</p>
<p>The fourth method, <code class="brush:cpp">
Clear
</code>, is used to clear the data in the <code class="brush:cpp">Data</code> object. It not only clears the data, it also sets the <code class="brush:cpp">
DataType</code> of the object to one that you provide. When you do not provide one, its default is <code class="brush:cpp">kDTInvalid</code>.</p>
<div><div id="highlighter_999890" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Clear ( DataType newNativeType = kDTInvalid );</code></div></div></td></tr></tbody></table></div></div>
<p>The next&nbsp;eight methods are used to retrieve data from the object in a specific format (one of the fmx namespace types).</p>
<div><div id="highlighter_595121" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;GetAsText () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;GetAsNumber () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;GetAsDate () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;GetAsTime () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;GetAsTimeStamp () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">GetAsBoolean () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number7 index6 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">BinaryData &amp;GetBinaryData () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number8 index7 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">const</code> <code class="cpp plain">Locale &amp;GetLocale () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>Whatever the kind of data in the <code class="brush:cpp">Data</code> 
object, these functions return the specific type defined by the function
 name and return type. If you want to make sure you are extracting, for 
example, <code class="brush:cpp">
Text</code> from&nbsp;a <code class="brush:cpp">Data</code> object&nbsp;only when the <code class="brush:cpp">
DataType</code> of the object is really text, you should use method <code class="brush:cpp">
GetNativeType</code> to determine the type of data contained in the&nbsp;<code class="brush:cpp">Data</code> object.</p>
<div><div id="highlighter_365948" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">fmx::Data::DataType DT;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">DT = DAP-&gt;GetNativeType(); </code><code class="cpp comments">// DAP is a DataAutoPtr</code></div><div class="line number3 index2 alt2"><code class="cpp plain">fmx::TextAutoPtr TAP;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">if</code><code class="cpp plain">(DT == fmx::Data::kDTText)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*TAP = DAP-&gt;GetAsText();</code></div><div class="line number7 index6 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>However, this method does only work if you have never changed the <code class="brush:cpp">
DataType</code> of the object. The following method, <code class="brush:cpp">
ConvertData</code>, for example, can be used to change the type of data independent of the data present in the&nbsp;<code class="brush:cpp">Data</code> object.</p>
<div><div id="highlighter_654058" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">ConvertData ( DataType nativeType );</code></div></div></td></tr></tbody></table></div></div>
<p>Now that we have seen how to retrieve data from the <code class="brush:cpp">Data</code> object, we can look at the methods to set data in the object.</p>
<div><div id="highlighter_753068" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">errcode SetAsText ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;textData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Locale &amp;sourceLocale, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType = kDTText );</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetAsNumber ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;numericData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType = kDTNumber );</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetAsDate ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;dateData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType = kDTDate );</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetAsTime ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;timeData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType = kDTTime );</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetAsTimeStamp ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;timeStampData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType = kDTTimeStamp );</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetDateTime ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DateTime &amp;dateTimeData, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType dateTimeType, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">DataType nativeType );</code></div><div class="line number7 index6 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetBinaryData ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">BinaryData &amp;binaryData, </code><code class="cpp color1 bold">bool</code> <code class="cpp plain">forceBinaryNativeType = </code><code class="cpp keyword bold">true</code> <code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>To all these methods you have to supply an object of the appropriate type. In case of the <code class="brush:cpp">
SetAsNumber</code>, <code class="brush:cpp">SetAsDate</code>, <code class="brush:cpp">SetAsTime</code>,&nbsp;and <code class="brush:cpp">SetAsTimeStamp</code>, you can provide a second argument, a <code class="brush:cpp">
DataType</code>. This argument is always set to a default, the appropriate type, when you do not provide this argument.</p>
<p>The <code class="brush:cpp">
SetAsText</code> method also has an optional <code class="brush:cpp">
DataType</code> you can provide, but also requires as a second argument a <code class="brush:cpp">
Locale</code> object. This is used to set indexing, sorting, and default
 font for fields. (You can find this setting in the Filemaker "Manage 
Database" dialog, when you click on a field and look at the "Storage" 
tab.)</p>
<p>Using <code class="brush:cpp">
SetDateTime</code>, you need to provide two <code class="brush:cpp">
DataType</code>s. The second <code class="brush:cpp">DataType</code> is, like the other Set-methods, the type of data stored with the data itself. The first&nbsp;<code class="brush:cpp">DataType</code> is the type of data that should be stored as the second type. A <code class="brush:cpp">
DateTime</code> can be interpreted as date, as&nbsp;time, or as 
timestamp, so this first type tells the method which of these three 
should be stored as the second type. This makes it possible 
to&nbsp;store a date&nbsp;as a time, or a timestamp&nbsp;as a date, etc.</p>
<p>The <code class="brush:cpp">
SetBinaryData</code> method does not take a <code class="brush:cpp">
DataType</code> as a second argument, but rather a <code class="brush:cpp">
bool</code> to force binary data as data type. The default is <code class="brush:cpp">
true</code>, which sets the <code class="brush:cpp">DataType</code>&nbsp;to <code class="brush:cpp">kDTBinary</code>. If you supply <code class="brush:cpp">
false</code> as a second argument, the <code class="brush:cpp">
DataType</code> is set to <code class="brush:cpp">
kDTText</code>.</p>
<p>The last two methods of the <code class="brush:cpp">
Data</code> class deal with fonts. The first, <code class="brush:cpp">
GetFontID</code>, is commented on as follows in the FMXData.h header.</p>
<blockquote>
<p>GetFontID will create a new id if the specified font name and font script has not been <span face="Consolas" color="#008000" size="2"><span face="Consolas" color="#008000" size="2"><span face="Consolas" color="#008000" size="2">used before in the database. A font id of zero is returned if the font could not be created.</span></span></span></p>
</blockquote>
<p>This method looks as follows.</p>
<div><div id="highlighter_172617" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">CharacterStyle::FontID GetFontID( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">Text &amp;fontName, CharacterStyle::FontScript fontScript, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">ExprEnv &amp;env );</code></div></div></td></tr></tbody></table></div></div>
<p>This is the only way&nbsp;to get the font you need for a <code class="brush:cpp">
CharacterStyle</code> object. You need to supply a name of a font that 
is installed on the operating system running your plug-in, otherwise the
 function returns 0. You also need to specify which fontscript you want 
it to have. The fontscript is one of the values in the Fontscript 
enumeration (see <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h">FMXTextStyle.h</a>). The third argument is an <code class="brush:cpp">
ExprEnv</code>. We will discuss this class later on (see <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h">FMXCalcEngine.h</a>).</p>
<p>The last method of the FMXData.h header is <code class="brush:cpp">
GetFontInfo</code>. You pass it a <code class="brush:cpp">
FontID</code> and you can retrieve the font name and&nbsp; fontscript. You also have to pass an <code class="brush:cpp">ExprEnv</code>, for reasons we will explain in our discussion of <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h">FMXCalcEngine.h</a>. The <code class="brush:cpp">
bool</code> that is returned should be <code class="brush:cpp">
true</code> when&nbsp;the font id is present in the database. The function looks like this:</p>
<div><div id="highlighter_818135" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">GetFontInfo( CharacterStyle::FontID font, Text &amp;fontName, CharacterStyle::FontScript &amp;fontScript, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">ExprEnv &amp;env ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>&nbsp;</p>
	
</div>

						</div>
					
								<div class="clr"></div>
			</div>
		</div>
		<div id="footer">
			<p style="text-align:center;">
 	Van der Linden Cultural Services, Powered by <a href="http://joomla.org/" class="sgfooter" target="_blank">Joomla!</a>

	

	
	

</p>
		</div>
		</div>
	</div>
	<div id="footergrad">&nbsp;</div>

<div style="padding: 0px; border: medium none; margin: 0px; position: absolute; left: 0px; top: 0px; width: 100%; z-index: 1001; direction: ltr;" class="highslide-container"><a style="position: absolute; top: -9999px; opacity: 0.75; z-index: 1;" href="javascript:;" title="Click to cancel" class="highslide-loading">Loading...</a><div style="display: none;"></div><div style="padding: 0px; border: medium none; margin: 0px; visibility: hidden;" class="highslide-viewport highslide-viewport-size"></div><table style="padding: 0px; border: medium none; margin: 0px; visibility: hidden; position: absolute; border-collapse: collapse; width: 0px;" cellspacing="0"><tbody style="padding: 0px; border: medium none; margin: 0px;"><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px 0px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -40px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px 0px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -80px; height: 20px; width: 20px;"></td><td class="drop-shadow highslide-outline" style="padding: 0px; border: medium none; margin: 0px; position: relative;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -80px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -20px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -60px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -20px; height: 20px; width: 20px;"></td></tr></tbody></table></div></body></html>