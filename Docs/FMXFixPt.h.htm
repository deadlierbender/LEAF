<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html slick-uniqueid="3" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" dir="ltr" lang="en-gb"><head>
<script src="FMXFixPt.h_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-34699114-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
	  <!-- base href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h" -->
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="keywords" content="productie, podiumkunsten, cultuur, cultuursector, copywriter, teksten, tekstschrijver, programmatoelichting, programmaboek, redactie, redacteur,planning, concerten, festivals, subsidieaanvragen, ensembles, Filemaker sdk headers, filemaker, sdk, filemaker api, api, plug-ins, plug-in, filemaker plug-in, filemaker plug-ins, ">
  <meta name="author" content="Super User">
  <meta name="description" content="Van der Linden Cultural Services levert diensten in de cultuursector. U kunt terecht voor teksten (zakelijk en informatief), productie en stage management in de podiumkunsten, Filemaker-database-development, transport, etc.">
  <meta name="generator" content="Joomla! - Open Source Content Management">
  <title>Van der Linden Cultural Services - FMXFixPt.h</title>
  <link href="http://culturalservices.nl/index.php/component/search/?Itemid=539&amp;format=opensearch" rel="search" title="Search Van der Linden Cultural Services" type="application/opensearchdescription+xml">
  <link rel="stylesheet" href="FMXFixPt.h_files/highslide.css" type="text/css">
  <link rel="stylesheet" href="FMXFixPt.h_files/highslide-sitestyles.css" type="text/css">
  <link rel="stylesheet" href="FMXFixPt.h_files/shCoreEclipse.css" type="text/css">
  <link rel="stylesheet" href="FMXFixPt.h_files/shThemeEclipse.css" type="text/css">
  <script src="FMXFixPt.h_files/mootools-core.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/core.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/caption.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/highslide-full.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/easing_equations.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/swfobject.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/en.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/highslide-sitesettings.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shCore.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushCpp.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushCSharp.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushCss.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushJava.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushJScript.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushPhp.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushPlain.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/shBrushXml.js" type="text/javascript"></script>
  <script src="FMXFixPt.h_files/mootools-more.js" type="text/javascript"></script>
  <script type="text/javascript">
window.addEvent('load', function() {
				new JCaption('img.caption');
			});
hs.graphicsDir = '/plugins/content/highslide/graphics/';

			  SyntaxHighlighter.all();
		 
  </script>

	<!-- The following line loads the template CSS file located in the template folder. -->
	<link rel="stylesheet" href="FMXFixPt.h_files/template.css" type="text/css">
<style type="text/css">.highslide img {cursor: url(/plugins/content/highslide/graphics/zmin.cur), pointer !important;}.highslide-viewport-size {position: fixed; width: 100%; height: 100%; left: 0; top: 0}</style></head>
<body id="page_bg">

	<div class="top-menu">
		<div id="sgmenu">
			
		</div>
	</div>

	<div id="mainwrap">
	<div id="header">
	

	
	
		<div id="search">
			<form action="/index.php/filemaker-plug-ins/fmxfixpt-h" method="post">
	<div class="search">
		<label for="mod-search-searchword">Search...</label><input name="searchword" id="mod-search-searchword" maxlength="20" class="inputbox" size="20" value="Search..." onblur="if (this.value=='') this.value='Search...';" onfocus="if (this.value=='Search...') this.value='';" type="text">	<input name="task" value="search" type="hidden">
	<input name="option" value="com_search" type="hidden">
	<input name="Itemid" value="539" type="hidden">
	</div>
</form>

		</div>
	
		<h1><a href="http://www.culturalservices.nl/index.php/filemaker-plug-ins">Filemaker Plug-Ins</a></h1>					
		
	</div>
	<div id="wrapper">
		<div id="content_m">
						<div class="maincol_w_left">
						
									<div class="leftcol">
								<div class="module">
			<div>
				<div>
					<div>
													<h3>Filemaker</h3>
											








<ul class="menu">




<li id="item-535" class="active parent"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins"><span>Filemaker SDK headers</span></a><ul><li id="item-532"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxextern-h"><span>FMXExtern.h</span></a></li><li id="item-537"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxclient-h"><span>FMXClient.h</span></a></li><li id="item-538"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/datetime-h"><span>FMXDateTime.h</span></a></li><li id="item-539" class="current active"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h"><span>FMXFixPt.h</span></a></li><li id="item-540"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtextstyle-h"><span>FMXTextStyle.h</span></a></li><li id="item-542"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtypes-h"><span>FMXTypes.h</span></a></li><li id="item-545"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxbinarydata-h"><span>FMXBinaryData.h</span></a></li><li id="item-546"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxtext-h"><span>FMXText.h</span></a></li><li id="item-543"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxdata-h"><span>FMXData.h</span></a></li><li id="item-544"><a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxcalcengine-h"><span>FMXCalcEngine.h</span></a></li></ul></li><li id="item-536"><a href="http://culturalservices.nl/index.php/resources"><span>Resources</span></a></li></ul>					</div>
				</div>
			</div>
		</div>
	
					</div>
					
						<div class="cont">
							<div class="item-page">

	<h2>
			<a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxfixpt-h">
		FMXFixPt.h</a>
		</h2>








<p><code class="brush:cpp">
</code>The FMXFixPt.h header contains the class <code class="brush:cpp">
FixPt</code> which is used to work with numbers in the Filemaker SDK. It also contains the autopointer class <code class="brush:cpp">
FixPtAutoPtr</code>.&nbsp;An object of this&nbsp;class is used to create an object of the class <code class="brush:cpp">
FixPt</code>. The basic operations through which the <code class="brush:cpp">
FixPtAutoPtr</code> and the <code class="brush:cpp">
FixPt</code> class are used are discussed at length in our discussion of the <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/datetime-h">FMXDateTime.h</a>&nbsp;header. Here we will only discuss the details of these classes.</p>
<p>First we will have to look at the autopointer.</p>
<div><div id="highlighter_630869" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">FixPtAutoPtr : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">std::auto_ptr&lt;FixPt&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">typedef</code> <code class="cpp plain">FixPtAutoPtr UpCaster;</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">public</code><code class="cpp plain">:</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">inline</code> <code class="cpp plain">FixPtAutoPtr ( fmx::int32 val = 0, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">precision = FixPt::kDefltFixedPrecision );</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">inline</code> <code class="cpp plain">FixPtAutoPtr ( fmx::int32 val, </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;precisionExample );</code></div><div class="line number7 index6 alt2"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>Concerning the typedef, you can read up on that in <a href="http://culturalservices.nl/index.php/filemaker-plug-ins/fmxclient-h">FMXClient.h</a>. The other two things we find are two constructors. These constructors not only create an object of class <code class="brush:cpp">FixPtAutoPtr</code>, they also initialize that object with a pointer to a <code class="brush:cpp">
FixPt</code> object. This class also inherits a constructor from the class <code class="brush:cpp">
auto_ptr</code> , from which it is derived. This last constructor simply takes a <code class="brush:cpp">
FixPtAutoPtr</code> as argument, to which value it is initialized. The 
other two - those that are explicitly defined in this header file - take
 the following arguments:</p>
<div><div id="highlighter_120990" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">//constructor 1</code></div><div class="line number2 index1 alt1"><code class="cpp plain">fmx::int32 val = 0</code></div><div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">precision = FixPt::kDefltFixedPrecision</code></div><div class="line number4 index3 alt1"><code class="cpp comments">//constructor 2</code></div><div class="line number5 index4 alt2"><code class="cpp plain">fmx::int32 val</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;precisionExample </code></div></div></td></tr></tbody></table></div></div>
<p>The <code class="brush:cpp">
FixPt
</code>is used to store and manipulate numbers, so the first of the arguments passed to these constructors as a value of type <code class="brush:cpp">
int32</code> (an <code class="brush:cpp">
int</code>). The second argument is used to set the precision. The 
precision defines&nbsp;the number of decimal places, e.g. value 1.5555 
with&nbsp;precision 3 corresponds to 1.556; note that you cannot 
initialize the <code class="brush:cpp">
FixPt</code> with a floating point value, so you'll have to provide that
 later; note also that the minimum precision is 16, so the precision of 3
 in the example cannot be accomplished using the precision of <code class="brush:cpp">
FixPt</code>.&nbsp;In the first constructor the argumenst are given 
default values in case you do not provide them yourself. those values 
are 0 and <code class="brush:cpp">
fDefltFixedPrecision</code>. this default fixed precision is defined in an enumeration in&nbsp;the <code class="brush:cpp">
FixPt</code> class as value 16. Whenever you call the constructor without any arguments, you will have a pointer to a <code class="brush:cpp">
FixPt</code> with stored values initialized to value&nbsp;0 and precision 16.</p>
<div><div id="highlighter_559537" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">FixPtAutoPtr Foo; </code><code class="cpp comments">//Foo points to a FixPt object with value 0 and precision 16</code></div></div></td></tr></tbody></table></div></div>
<p>When you use the second constructor you will need to provide an integer&nbsp;and an existing <code class="brush:cpp">
FixPt
</code>object. The new pointer wil point to a new <code class="brush:cpp">
FixPt</code> object with the same precision as the one passed as the second argument to the constructor of the <code class="brush:cpp">
FixPtAutoPtr</code>.</p>
<p>Now that we have looked at the way we can create a <code class="brush:cpp">
FixPt</code> object in the Filemaker application, we will examine the member functions.</p>
<div><div id="highlighter_447453" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignInt ( fmx::int32 that );</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignDouble ( </code><code class="cpp color1 bold">double</code> <code class="cpp plain">that );</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">AssignFixPt ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that );</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator == ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator != ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &lt; ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number7 index6 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &lt;= ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number8 index7 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &gt; ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number9 index8 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">operator &gt;= ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;that ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number10 index9 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Increment ( fmx::int32 n );</code></div><div class="line number11 index10 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Decrement ( fmx::int32 n );</code></div><div class="line number12 index11 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Negate ();</code></div><div class="line number13 index12 alt2"><code class="cpp comments">// Obtain and modify the decimal precision from the standard 16 digits. For more information, see SetPrecision calculation function in FileMaker Pro Advanced Help.</code></div><div class="line number14 index13 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">GetPrecision () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number15 index14 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">SetPrecision ( </code><code class="cpp color1 bold">int</code> <code class="cpp plain">precision );</code></div><div class="line number16 index15 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Add ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;arg, FixPt &amp;result ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number17 index16 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Subtract ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;arg, FixPt &amp;result ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number18 index17 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">Multiply ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;arg, FixPt &amp;result ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number19 index18 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">fmx::errcode Divide ( </code><code class="cpp keyword bold">const</code> <code class="cpp plain">FixPt &amp;arg, FixPt &amp;result ) </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number20 index19 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">AsBool () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number21 index20 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp plain">fmx::int32 AsLong () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number22 index21 alt1"><code class="cpp keyword bold">inline</code> <code class="cpp color1 bold">double</code> <code class="cpp plain">AsFloat () </code><code class="cpp keyword bold">const</code><code class="cpp plain">;</code></div><div class="line number23 index22 alt2"><code class="cpp keyword bold">inline</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">operator </code><code class="cpp keyword bold">delete</code> <code class="cpp plain">( </code><code class="cpp keyword bold">void</code> <code class="cpp plain">*obj );</code></div></div></td></tr></tbody></table></div></div>
<p>These methods consist of:</p>
<ol>
<li>Three assignment methods</li>
<li>Six&nbsp;operator functions that enable you to compare <code class="brush:cpp">
FixPt</code> objects and the&nbsp;<code class="brush:cpp">delete</code> operator</li>
<li>Two methods to set and get the precision</li>
<li>Seven methods to do calculations</li>
<li>Three methods to retrieve values from&nbsp;a <code class="brush:cpp">
FixPt</code> object</li>
</ol>
<p>The three assignment methods are used to set the value stored with a <code class="brush:cpp">
FixPt</code> object. The <code class="brush:cpp">
AssignInt</code>, <code class="brush:cpp">
AssignDouble</code>, and <code class="brush:cpp">
AssignFixPt</code> do as their names promise to. The only thing of note 
is that in the first two cases the precision remains untouched, the 
third sets the value as well as the precision to those of another <code class="brush:cpp">
FixPt</code> object passed as an argument.</p>
<p>The seven operator functions can be used whenever you need to compare two <code class="brush:cpp">
FixPt
</code>objects with each other. Except for the <code class="brush:cpp">
delete</code> operator, which is dealt with by the autopointer class to 
clean up after you. One thing to note is that only the values stored 
with the <code class="brush:cpp">
FixPt
</code>objects are compared. The comparison does not look at the 
precision. Note that this class does not have an assignment operator. 
Whenever you need to set one object to the value of another, you need 
the <code class="brush:cpp">
AssignFixPt</code>&nbsp;method to achieve that.</p>
<p>The methods to set and get the precision do as they promise. As 
already noted, the minimum precision is 16, so setting the precision to 
1, for example, will set the precision to 16 instead.</p>
<p>The calculation methods are used to manipulate the number value in&nbsp;a <code class="brush:cpp">
FixPt</code> object. <code class="brush:cpp">
Increment
</code>and <code class="brush:cpp">
Decrement
</code>add to or subtract from a <code class="brush:cpp">FixPt</code> object the&nbsp;integer you supply.&nbsp;&nbsp;The method <code class="brush:cpp">
Negate
</code>converts a positive number to a negative one and vice-versa.</p>
<p>To use the <code class="brush:cpp">
Add</code>, <code class="brush:cpp">
Substract</code>, <code class="brush:cpp">Multiply</code>, and <code class="brush:cpp">
Divide</code> methods you need to pass another <code class="brush:cpp">
FixPt</code> the value of which is added to, substracted from, 
multiplied with&nbsp;or divides the value in the object that calls this 
method. The result, however, is not stored in the calling object. It is 
stored in a third <code class="brush:cpp">
FixPt</code>, which is passed as the second argument to the <code class="brush:cpp">Add</code> and <code class="brush:cpp">Substract</code>,
 etc., methods. You can also pass the calling object as the second 
argument, in which case it itself contains the result of the 
calculation. The <code class="brush:cpp">
Divide
</code>method returns an <code class="brush:cpp">
errcode
</code>which signals a problem if it is not 0.</p>
<p>Then there are three methods left. These let you retrieve the value from a <code class="brush:cpp">
FixPt</code> object. The <code class="brush:cpp">
AsBool</code> method returns 1 whenever the value in the <code class="brush:cpp">
FixPt</code> is not 0, and it returns 0 if the stored value is 0. Method <code class="brush:cpp">
AsLong
</code>return the value as an integer. This truncates any decimal values. Method <code class="brush:cpp">
AsFloat</code> returns a <code class="brush:cpp">
double</code>. The maximum of decimal places of the returned value is 
16, of which the sixteenth is not precise. Only count on the first 
fifteen decimal values to be correct.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
	
</div>

						</div>
					
								<div class="clr"></div>
			</div>
		</div>
		<div id="footer">
			<p style="text-align:center;">
 	Van der Linden Cultural Services, Powered by <a href="http://joomla.org/" class="sgfooter" target="_blank">Joomla!</a>

	

	
	

</p>
		</div>
		</div>
	</div>
	<div id="footergrad">&nbsp;</div>

<div style="padding: 0px; border: medium none; margin: 0px; position: absolute; left: 0px; top: 0px; width: 100%; z-index: 1001; direction: ltr;" class="highslide-container"><a style="position: absolute; top: -9999px; opacity: 0.75; z-index: 1;" href="javascript:;" title="Click to cancel" class="highslide-loading">Loading...</a><div style="display: none;"></div><div style="padding: 0px; border: medium none; margin: 0px; visibility: hidden;" class="highslide-viewport highslide-viewport-size"></div><table style="padding: 0px; border: medium none; margin: 0px; visibility: hidden; position: absolute; border-collapse: collapse; width: 0px;" cellspacing="0"><tbody style="padding: 0px; border: medium none; margin: 0px;"><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px 0px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -40px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px 0px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -80px; height: 20px; width: 20px;"></td><td class="drop-shadow highslide-outline" style="padding: 0px; border: medium none; margin: 0px; position: relative;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -80px; height: 20px; width: 20px;"></td></tr><tr style="padding: 0px; border: medium none; margin: 0px; height: auto;"><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -20px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll 0px -60px; height: 20px; width: 20px;"></td><td style="padding: 0px; border: medium none; margin: 0px; line-height: 0; font-size: 0px; background: transparent url(&quot;http://culturalservices.nl/plugins/content/highslide/graphics/outlines/drop-shadow.png&quot;) repeat scroll -20px -20px; height: 20px; width: 20px;"></td></tr></tbody></table></div></body></html>